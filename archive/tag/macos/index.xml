<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Macos on Edd Mann</title><link>https://eddmann.com/archive/tag/macos/</link><description>Recent content in Macos on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Tue, 20 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/macos/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Contact Tracing Scanner using Swift for macOS</title><link>https://eddmann.com/posts/creating-a-contact-tracing-scanner-using-swift-for-macos/</link><pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/creating-a-contact-tracing-scanner-using-swift-for-macos/</guid><description>&lt;p>Following on from my &lt;a href="https://eddmann.com/posts/creating-a-contact-tracing-scanner-using-web-bluetooth/">previous experiment&lt;/a> which highlighted what an Exposure Notification-enabled device actually emits using Web Bluetooth, I decided to explore how I could do the same using Swift and Interface Builder for macOS.&lt;/p></description></item></channel></rss>