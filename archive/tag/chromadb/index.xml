<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chromadb on Edd Mann</title><link>https://eddmann.com/archive/tag/chromadb/</link><description>Recent content in Chromadb on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Wed, 10 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/chromadb/index.xml" rel="self" type="application/rss+xml"/><item><title>Q&amp;A Retrieval Augmented Generation (RAG) with LangChain and Chroma</title><link>https://eddmann.com/posts/qa-retrieval-augmented-generation-rag-with-langchain-and-chroma/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/qa-retrieval-augmented-generation-rag-with-langchain-and-chroma/</guid><description>&lt;p>Large-language models (OpenAI/ChatGPT in particular) are all the rage at the moment.
Like many developers, I am interested in exploring what is possible with this new technology.
This post documents my experience exploring how to implement &lt;a href="https://python.langchain.com/docs/use_cases/question_answering/" rel="external noopener" target="_blank">Q&amp;amp;A Retrieval Augmented Generation&lt;/a> (RAG) using LangChain and the &lt;a href="https://www.trychroma.com/" rel="external noopener" target="_blank">Chroma&lt;/a> vector database.&lt;/p></description></item></channel></rss>