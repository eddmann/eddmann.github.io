<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin on Edd Mann</title><link>https://eddmann.com/archive/tag/bitcoin/</link><description>Recent content in Bitcoin on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Fri, 10 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/bitcoin/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitcoin Internals: Verifying Merkle Roots using Merkle Proofs in JavaScript</title><link>https://eddmann.com/posts/bitcoin-internals-verifying-merkle-roots-using-merkle-proofs-in-javascript/</link><pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/bitcoin-internals-verifying-merkle-roots-using-merkle-proofs-in-javascript/</guid><description>&lt;p>In this video, we expand on the &lt;a href="https://eddmann.com/posts/bitcoin-internals-how-blocks-use-merkle-trees-in-javascript/">previous one&lt;/a>, in which we computed a Merkle root for a given list of transactions using Merkle trees.
We will now compute a Merkle proof for a given transaction, allowing clients to validate that a transaction exists in a block without having to download its entire contents.&lt;/p></description></item><item><title>Bitcoin Internals: How Blocks use Merkle Trees in JavaScript</title><link>https://eddmann.com/posts/bitcoin-internals-how-blocks-use-merkle-trees-in-javascript/</link><pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/bitcoin-internals-how-blocks-use-merkle-trees-in-javascript/</guid><description>&lt;p>In this video, I take a look into how Bitcoin internally uses Merkle trees to generate its block Merkle roots.
We delve into how this is computed and why it is so important to validate the state of transactions.&lt;/p></description></item></channel></rss>