<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Secret-Santa on Edd Mann</title><link>https://eddmann.com/archive/tag/secret-santa/</link><description>Recent content in Secret-Santa on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Fri, 23 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/secret-santa/index.xml" rel="self" type="application/rss+xml"/><item><title>Allocating and Notifying Secret Santas via Email using Clojure</title><link>https://eddmann.com/posts/allocating-and-notifying-secret-santas-via-email-using-clojure/</link><pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/allocating-and-notifying-secret-santas-via-email-using-clojure/</guid><description>&lt;p>My close family have been doing Secret Santa over the past couple of years, and although there are plenty of free services out there to solve the problem of allocating and notifying participants, I thought it would be a great opportunity to explore building a solution using Clojure and Lein.&lt;/p></description></item><item><title>Allocating Secret Santas with a Substitution Cipher using Clojure</title><link>https://eddmann.com/posts/allocating-secret-santas-with-a-substitution-cipher-using-clojure/</link><pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/allocating-secret-santas-with-a-substitution-cipher-using-clojure/</guid><description>&lt;p>Over Christmas I found myself delving back into a bit of Clojure.
One such problem I stumbled upon solving was allocating &lt;a href="https://en.wikipedia.org/wiki/Secret_Santa" rel="external noopener" target="_blank">Secret Santas&lt;/a>.
In this post I will discuss how I went about grouping a given list of names based on certain criteria, and then correctly pairing up each person.
From here, I will highlight how I expanded upon the solution to allow these allocations to be distributed and hidden from prying eyes using a simple &lt;a href="https://en.wikipedia.org/wiki/ROT13" rel="external noopener" target="_blank">ROT13&lt;/a> substitution cipher.&lt;/p></description></item></channel></rss>