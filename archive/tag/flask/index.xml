<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flask on Edd Mann</title><link>https://eddmann.com/archive/tag/flask/</link><description>Recent content in Flask on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Mon, 10 Feb 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/flask/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Basic Auth. and Decorators in Python's Flask</title><link>https://eddmann.com/posts/using-basic-auth-and-decorators-in-pythons-flask/</link><pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/using-basic-auth-and-decorators-in-pythons-flask/</guid><description>&lt;p>I have recently set aside some time to delve into the world of Python and all its Zen.
Being a web developer at heart, I, of course, had to look at the current options available to me.
In this post, I will guide you through creating a single-script web application using Flask and basic access authentication.
For simplicity, I assume that you have a working installation of either Python 2.7/3.3 and &lt;a href="http://www.virtualenv.org/en/latest/index.html" rel="external noopener" target="_blank">virtualenv&lt;/a>.&lt;/p></description></item></channel></rss>