<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Micropython on Edd Mann</title><link>https://eddmann.com/archive/tag/micropython/</link><description>Recent content in Micropython on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Wed, 03 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/micropython/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Secret Santa allocator and SMS sender using a Raspberry Pi Pico/MicroPython and SIM800L module</title><link>https://eddmann.com/posts/building-a-secret-santa-allocator-and-sms-sender-using-a-raspberry-pi-pico-micropython-and-sim800l-module/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-a-secret-santa-allocator-and-sms-sender-using-a-raspberry-pi-pico-micropython-and-sim800l-module/</guid><description>&lt;p>Over the past couple of years, I have explored &lt;a href="https://eddmann.com/posts/allocating-secret-santas-with-a-substitution-cipher-using-clojure/">several&lt;/a> &lt;a href="https://eddmann.com/posts/allocating-and-notifying-secret-santas-via-email-using-clojure/">different&lt;/a> ways to solve the problem of allocating Secret Santas for members of my family.
Having spent a couple of months recently exploring microcontrollers, I decided that this year I would send out automatically allocated Secret Santas via SMS using a Raspberry Pi Pico, MicroPython, and a &lt;a href="https://lastminuteengineers.com/sim800l-gsm-module-arduino-tutorial/" rel="external noopener" target="_blank">SIM800L GSM module&lt;/a>.&lt;/p></description></item><item><title>Building a 2FA TOTP generator using a Raspberry Pi Pico and MicroPython</title><link>https://eddmann.com/posts/building-a-2fa-totp-generator-using-a-raspberry-pi-pico-and-micropython/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-a-2fa-totp-generator-using-a-raspberry-pi-pico-and-micropython/</guid><description>&lt;p>I have recently become very interested in microcontrollers, particularly the &lt;a href="https://www.raspberrypi.com/products/raspberry-pi-pico/" rel="external noopener" target="_blank">Raspberry Pi Pico&lt;/a>.
Not only is it ridiculously affordable (just over Â£3), but it also provides extensive scope for use in various projects.
One such project I wanted to explore was building an independent &lt;a href="https://en.wikipedia.org/wiki/Time-based_one-time_password" rel="external noopener" target="_blank">Time-based One-time Password&lt;/a> (TOTP) device.&lt;/p></description></item></channel></rss>