<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gpt5 on Edd Mann</title><link>https://eddmann.com/archive/tag/gpt5/</link><description>Recent content in Gpt5 on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Mon, 01 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/gpt5/index.xml" rel="self" type="application/rss+xml"/><item><title>Improving an F1 Picks Game in 4 Hours: It's Lights Out and Away We Go!</title><link>https://eddmann.com/posts/improving-an-f1-picks-game-in-4-hours/</link><pubDate>Mon, 01 Sep 2025 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/improving-an-f1-picks-game-in-4-hours/</guid><description>How I levelled up my F1 Picks game in another 4-hour sprint - leveraging Laravel Boost, LLM-driven guidelines, Tailwind styling, and robust tests with Cursor + GPT-5 - to deliver a F1-inspired upgrade just in time for Dutch GP qualifying.</description></item><item><title>LEGO F1 Minifigure Scanner: A Quick Build with GPT-5 and Cursor</title><link>https://eddmann.com/posts/lego-f1-minifigure-scanner-a-quick-build-with-gpt-5-and-cursor/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/lego-f1-minifigure-scanner-a-quick-build-with-gpt-5-and-cursor/</guid><description>In this post, I share how I built a lightweight web app that scans LEGO F1 blind box Data Matrix codes to identify the minifigure inside. Using Cursor and the GPT-5 model, I put this together in under an hour - saving my nephews from costly duplicate boxes.</description></item></channel></rss>