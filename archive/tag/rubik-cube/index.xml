<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rubik-Cube on Edd Mann</title><link>https://eddmann.com/archive/tag/rubik-cube/</link><description>Recent content in Rubik-Cube on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Sun, 04 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/rubik-cube/index.xml" rel="self" type="application/rss+xml"/><item><title>Building an optimal Pocket Cube (2x2x2) Solver using Rust/WASM and Three.js/React</title><link>https://eddmann.com/posts/building-an-optimal-pocket-cube-solver-using-rust-wasm-threejs-and-react/</link><pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-an-optimal-pocket-cube-solver-using-rust-wasm-threejs-and-react/</guid><description>&lt;p>Over the past couple of months, I have been very interested in exploring how to efficiently visualise and solve a Rubik&amp;rsquo;s Cube.
Coupled with my desire to experiment with Rust and WASM, this felt like a great opportunity to blend the two.
However, before solving a 3x3x3 Rubik&amp;rsquo;s Cube, I thought it would be beneficial to explore how to optimally solve a Pocket Cube first.&lt;/p></description></item></channel></rss>