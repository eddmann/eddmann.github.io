<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Property-Testing on Edd Mann</title><link>https://eddmann.com/archive/tag/property-testing/</link><description>Recent content in Property-Testing on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Fri, 27 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/property-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Building an Enigma Machine in Haskell</title><link>https://eddmann.com/posts/building-an-enigma-machine-in-haskell/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-an-enigma-machine-in-haskell/</guid><description>&lt;p>Following on from my previous post which highlighted my experience building an &lt;a href="https://eddmann.com/posts/building-an-enigma-machine-in-clojurescript/">Enigma Machine in ClojureScript&lt;/a>.
I decided it would be interesting to model the machine within Haskell.
I felt solving the same problem in this manner would be a great way to compare and contrast Lisp and heavily-typed languages such as Haskell.
Through this process I also wanted to explore using Hspec and QuickCheck for comparable property-based testing that I achieved in the ClojureScript counterpart.&lt;/p></description></item><item><title>Building an Enigma Machine in ClojureScript</title><link>https://eddmann.com/posts/building-an-enigma-machine-in-clojurescript/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-an-enigma-machine-in-clojurescript/</guid><description>&lt;p>The Enigma Machine is a typewriter-sized substitution encryption device used by Germany in World War 2.
It was so important to the war-time efforts that work carried out by Alan Turing at Bletchley Park to decode the resulting ciphers helped end the war.
For years I have been fascinated by this device, and I thought it would be interesting to explore implementing a web-based Enigma Machine using ClojureScript.
I also thought it would be a great opportunity to explore how I can use property-based testing to help garner confidence from the resulting implementation.&lt;/p></description></item></channel></rss>