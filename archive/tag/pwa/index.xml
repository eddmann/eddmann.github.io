<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pwa on Edd Mann</title><link>https://eddmann.com/archive/tag/pwa/</link><description>Recent content in Pwa on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Sat, 25 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/pwa/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Secret Santa Draw PWA in React and TypeScript</title><link>https://eddmann.com/posts/building-a-secret-santa-draw-pwa-in-react-and-typescript/</link><pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-a-secret-santa-draw-pwa-in-react-and-typescript/</guid><description>&lt;p>Over the &lt;a href="https://eddmann.com/posts/allocating-and-notifying-secret-santas-via-email-using-clojure/">past&lt;/a> &lt;a href="https://eddmann.com/posts/building-a-secret-santa-allocator-and-sms-sender-using-a-raspberry-pi-pico-micropython-and-sim800l-module/">several&lt;/a> &lt;a href="https://eddmann.com/posts/allocating-secret-santas-using-an-aws-step-function-workflow-and-every-available-lambda-runtime/">years&lt;/a>, I have taken the opportunity of allocating Secret Santas for members of my family as a means of exploring new technologies.
For the past several months, I have been interested in the concept of Progressive Web Applications (thanks in large part to &lt;a href="https://frontendmasters.com/courses/pwas/" rel="external noopener" target="_blank">this series&lt;/a>), and getting more hands-on experience with the ever-changing frontend landscape.
As such, I decided that this year I would build a small application that works across Desktop, iOS, and Android to perform Secret Santa draws in both a local and remote setting.
In this post, I would like to document how I went about building this application.&lt;/p></description></item><item><title>Building a Running Calculator PWA in React and TypeScript</title><link>https://eddmann.com/posts/building-a-running-calculator-pwa-in-react-and-typescript/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/building-a-running-calculator-pwa-in-react-and-typescript/</guid><description>&lt;p>I have been an avid runner for many years now, but I still get confused by imperial and metric measurements.
On top of this, the number of times I seek out a random website to perform some form of pace/distance calculation is too often to count.
What I wanted was a desktop and mobile application that could perform pace, distance, and time calculations, along with imperial/metric conversions - &lt;em>a swiss-army knife of running calculators&lt;/em>.
In this post, I would like to document my experience building a &lt;a href="https://web.dev/articles/what-are-pwas" rel="external noopener" target="_blank">Progressive Web Application&lt;/a> (PWA) that does just this, providing a native app-like experience across iOS, Android, and Desktop.&lt;/p></description></item></channel></rss>