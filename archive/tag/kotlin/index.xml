<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on Edd Mann</title><link>https://eddmann.com/archive/tag/kotlin/</link><description>Recent content in Kotlin on Edd Mann</description><generator>Hugo</generator><language>en-GB</language><lastBuildDate>Fri, 28 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://eddmann.com/archive/tag/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Bridging the Gap Between Android Native Functionality and JavaScript Web Applications</title><link>https://eddmann.com/posts/bridging-the-gap-between-android-native-functionality-and-javascript-web-applications/</link><pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/bridging-the-gap-between-android-native-functionality-and-javascript-web-applications/</guid><description>In this post, I share a pattern I&amp;rsquo;ve been using to bridge native Android functionality with JavaScript running inside a WebView. It covers setting up a lightweight Kotlin/Java-JavaScript bridge to handle asynchronous communication between the two.</description></item><item><title>Solving the Advent of Code 2023 calendar in Kotlin and Swift</title><link>https://eddmann.com/posts/solving-the-advent-of-code-2023-calendar-in-kotlin-and-swift/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://eddmann.com/posts/solving-the-advent-of-code-2023-calendar-in-kotlin-and-swift/</guid><description>&lt;p>Another year, another &lt;a href="https://adventofcode.com/2023" rel="external noopener" target="_blank">Advent of Code&lt;/a>, another excuse to explore new languages.
After my recent exploration into &lt;a href="https://eddmann.com/posts/building-a-secret-santa-draw-pwa-in-react-and-typescript/">PWAs&lt;/a> this past year, I wanted a reason to explore Kotlin and Swift, two languages equipped for native mobile (Android and iOS) development.
Before delving into the mobile domain, I wanted to see what each language had to offer.
In this post, I will document my experience completing the Advent of Code 2023 calendar in both &lt;a href="https://github.com/eddmann/advent-of-code/tree/master/2023/kotlin" rel="external noopener" target="_blank">Kotlin&lt;/a> and &lt;a href="https://github.com/eddmann/advent-of-code/tree/master/2023/swift" rel="external noopener" target="_blank">Swift&lt;/a>.&lt;/p></description></item></channel></rss>